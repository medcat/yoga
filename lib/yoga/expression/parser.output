Productions:
43
   0 $start: expression $                        
   1 expression: group                           { |_|    [_]          }
   2 expression: group expression                { |a, b| b.unshift(a) }
   3 group: group modifier                       { |a, b|    compile_modifier(b, a) }
   4 group: group binop group                    { |a, b, c| compile_binop(b, a, c) }
   5 group: value                                
   6 modifier: "*"                               { |_| _[0] }
   7 modifier: "+"                               { |_| _[0] }
   8 modifier: "?"                               { |_| _[0] }
   9 binop: "|"                                  { |_| _[0] }
  10 binop: "&"                                  { |_| _[0] }
  11 binop: "--"                                 { |_| _[0] }
  12 binop: "-"                                  { |_| _[0] }
  13 value: "(" expression ")"                   { |_, a, _| compile_paren(a)      }
  14 value: STRING                               { |_|       compile_string(_)     }
  15 value: contain                              { |_|       compile_contain(_)    }
  16 value: NUMBER                               { |_|       compile_number(_)     }
  17 value: identifier                           { |_|       compile_identifier(_) }
  18 contain: "[" contain.body "]"               { |_, a, _| a }
  19 identifier: CHARACTER chars                 { |a, b| b.unshift(a)             }
  20 chars: char                                 { |_|    [_]                      }
  21 chars: char chars                           { |a, b| b.unshift(a)             }
  22 char: CHARACTER                             
  23 char: NUMBER                                
  24 char: "-"                                   
  25 contain.body: "^" contain.parts             { |a, b| b.unshift(a) }
  26 contain.body: contain.parts                 
  27 contain.parts: contain.part                 { |_|    [_]          }
  28 contain.parts: contain.part contain.parts   { |a, b| b.unshift(a) }
  29 contain.part: contain.char                  
  30 contain.part: contain.char "-" contain.char { |a, b, c| [:SET, a[1], c[1]] }
  31 contain.part: "-"                           
  32 contain.char: CHARACTER                     
  33 contain.char: NUMBER                        
  34 contain.char: ESCAPED                       

Precedence:
  --- highest
  left     5:
    {UNION, INTERSECT, SDIFFERENCE, DIFFERENCE}
  right    4:
    {CHARACTER, NUMBER}
  left     3:
    {STAR, PLUS, OPTIONAL}
  nonassoc 2:
    {LPAREN, RPAREN}
  nonassoc 1:
    {_}
  nonassoc 0:
    {$}
  --- lowest

  State 0:
    0/n0: $start →  • expression $
      {}
    1/n1: expression →  • group
      {}
    2/n1: expression →  • group expression
      {}
    3/n1: group →  • group modifier
      {}
    4/n1: group →  • group binop group
      {}
    5/n1: group →  • value
      {}
    6/n2: value →  • "(" expression ")"
      {}
    7/n1: value →  • STRING
      {}
    8/n1: value →  • contain
      {}
    9/r4: value →  • NUMBER
      {}
    10/n1: value →  • identifier
      {}
    11/n1: contain →  • "[" contain.body "]"
      {}
    12/r4: identifier →  • CHARACTER chars
      {}
    transitions:
      expression: State 1
      group: State 2
      value: State 3
      "(": State 4
      STRING: State 5
      contain: State 6
      NUMBER: State 7
      identifier: State 8
      "[": State 9
      CHARACTER: State 10

  State 1:
    13/n0: $start → expression • $
      {}
    transitions:
      $: State 11

  State 2:
    14/n1: expression → group • 
      {$, ")"}
    15/n1: expression → group • expression
      {}
    16/n1: expression →  • group
      {}
    17/n1: expression →  • group expression
      {}
    18/n1: group →  • group modifier
      {}
    19/n1: group →  • group binop group
      {}
    20/n1: group →  • value
      {}
    21/n2: value →  • "(" expression ")"
      {}
    22/n1: value →  • STRING
      {}
    23/n1: value →  • contain
      {}
    24/r4: value →  • NUMBER
      {}
    25/n1: value →  • identifier
      {}
    26/n1: contain →  • "[" contain.body "]"
      {}
    27/r4: identifier →  • CHARACTER chars
      {}
    28/n1: group → group • modifier
      {}
    29/l3: modifier →  • "*"
      {}
    30/l3: modifier →  • "+"
      {}
    31/l3: modifier →  • "?"
      {}
    32/n1: group → group • binop group
      {}
    33/l5: binop →  • "|"
      {}
    34/l5: binop →  • "&"
      {}
    35/l5: binop →  • "--"
      {}
    36/l5: binop →  • "-"
      {}
    transitions:
      expression: State 12
      group: State 2
      value: State 3
      "(": State 4
      STRING: State 5
      contain: State 6
      NUMBER: State 7
      identifier: State 8
      "[": State 9
      CHARACTER: State 10
      modifier: State 13
      "*": State 14
      "+": State 15
      "?": State 16
      binop: State 17
      "|": State 18
      "&": State 19
      "--": State 20
      "-": State 21
    reductions:
      $: Rule 1
      ")": Rule 1

  State 3:
    37/n1: group → value • 
      {$, "*", "+", "?", "|", "&", "--", "-", "(", STRING, "[", NUMBER, CHARACTER, ")"}
    reductions:
      $: Rule 5
      "*": Rule 5
      "+": Rule 5
      "?": Rule 5
      "|": Rule 5
      "&": Rule 5
      "--": Rule 5
      "-": Rule 5
      "(": Rule 5
      STRING: Rule 5
      "[": Rule 5
      NUMBER: Rule 5
      CHARACTER: Rule 5
      ")": Rule 5

  State 4:
    38/n2: value → "(" • expression ")"
      {}
    39/n1: expression →  • group
      {}
    40/n1: expression →  • group expression
      {}
    41/n1: group →  • group modifier
      {}
    42/n1: group →  • group binop group
      {}
    43/n1: group →  • value
      {}
    44/n2: value →  • "(" expression ")"
      {}
    45/n1: value →  • STRING
      {}
    46/n1: value →  • contain
      {}
    47/r4: value →  • NUMBER
      {}
    48/n1: value →  • identifier
      {}
    49/n1: contain →  • "[" contain.body "]"
      {}
    50/r4: identifier →  • CHARACTER chars
      {}
    transitions:
      expression: State 22
      group: State 2
      value: State 3
      "(": State 4
      STRING: State 5
      contain: State 6
      NUMBER: State 7
      identifier: State 8
      "[": State 9
      CHARACTER: State 10

  State 5:
    51/n1: value → STRING • 
      {$, "*", "+", "?", "|", "&", "--", "-", "(", STRING, "[", NUMBER, CHARACTER, ")"}
    reductions:
      $: Rule 14
      "*": Rule 14
      "+": Rule 14
      "?": Rule 14
      "|": Rule 14
      "&": Rule 14
      "--": Rule 14
      "-": Rule 14
      "(": Rule 14
      STRING: Rule 14
      "[": Rule 14
      NUMBER: Rule 14
      CHARACTER: Rule 14
      ")": Rule 14

  State 6:
    52/n1: value → contain • 
      {$, "*", "+", "?", "|", "&", "--", "-", "(", STRING, "[", NUMBER, CHARACTER, ")"}
    reductions:
      $: Rule 15
      "*": Rule 15
      "+": Rule 15
      "?": Rule 15
      "|": Rule 15
      "&": Rule 15
      "--": Rule 15
      "-": Rule 15
      "(": Rule 15
      STRING: Rule 15
      "[": Rule 15
      NUMBER: Rule 15
      CHARACTER: Rule 15
      ")": Rule 15

  State 7:
    53/r4: value → NUMBER • 
      {$, "*", "+", "?", "|", "&", "--", "-", "(", STRING, "[", NUMBER, CHARACTER, ")"}
    reductions:
      $: Rule 16
      "*": Rule 16
      "+": Rule 16
      "?": Rule 16
      "|": Rule 16
      "&": Rule 16
      "--": Rule 16
      "-": Rule 16
      "(": Rule 16
      STRING: Rule 16
      "[": Rule 16
      NUMBER: Rule 16
      CHARACTER: Rule 16
      ")": Rule 16

  State 8:
    54/n1: value → identifier • 
      {$, "*", "+", "?", "|", "&", "--", "-", "(", STRING, "[", NUMBER, CHARACTER, ")"}
    reductions:
      $: Rule 17
      "*": Rule 17
      "+": Rule 17
      "?": Rule 17
      "|": Rule 17
      "&": Rule 17
      "--": Rule 17
      "-": Rule 17
      "(": Rule 17
      STRING: Rule 17
      "[": Rule 17
      NUMBER: Rule 17
      CHARACTER: Rule 17
      ")": Rule 17

  State 9:
    55/n1: contain → "[" • contain.body "]"
      {}
    56/n1: contain.body →  • "^" contain.parts
      {}
    57/n1: contain.body →  • contain.parts
      {}
    58/n1: contain.parts →  • contain.part
      {}
    59/n1: contain.parts →  • contain.part contain.parts
      {}
    60/n1: contain.part →  • contain.char
      {}
    61/l5: contain.part →  • contain.char "-" contain.char
      {}
    62/l5: contain.part →  • "-"
      {}
    63/r4: contain.char →  • CHARACTER
      {}
    64/r4: contain.char →  • NUMBER
      {}
    65/n1: contain.char →  • ESCAPED
      {}
    transitions:
      contain.body: State 23
      "^": State 24
      contain.parts: State 25
      contain.part: State 26
      contain.char: State 27
      "-": State 28
      CHARACTER: State 29
      NUMBER: State 30
      ESCAPED: State 31

  State 10:
    66/r4: identifier → CHARACTER • chars
      {}
    67/n1: chars →  • char
      {}
    68/n1: chars →  • char chars
      {}
    69/r4: char →  • CHARACTER
      {}
    70/r4: char →  • NUMBER
      {}
    71/l5: char →  • "-"
      {}
    transitions:
      chars: State 32
      char: State 33
      CHARACTER: State 34
      NUMBER: State 35
      "-": State 36

  State 11:
    72/n0: $start → expression $ • 
      {}
    accepting:
      $: Rule 0

  State 12:
    73/n1: expression → group expression • 
      {$, ")"}
    reductions:
      $: Rule 2
      ")": Rule 2

  State 13:
    74/n1: group → group modifier • 
      {$, "*", "+", "?", "|", "&", "--", "-", "(", STRING, "[", NUMBER, CHARACTER, ")"}
    reductions:
      $: Rule 3
      "*": Rule 3
      "+": Rule 3
      "?": Rule 3
      "|": Rule 3
      "&": Rule 3
      "--": Rule 3
      "-": Rule 3
      "(": Rule 3
      STRING: Rule 3
      "[": Rule 3
      NUMBER: Rule 3
      CHARACTER: Rule 3
      ")": Rule 3

  State 14:
    75/l3: modifier → "*" • 
      {$, "*", "+", "?", "|", "&", "--", "-", "(", STRING, "[", NUMBER, CHARACTER, ")"}
    reductions:
      $: Rule 6
      "*": Rule 6
      "+": Rule 6
      "?": Rule 6
      "|": Rule 6
      "&": Rule 6
      "--": Rule 6
      "-": Rule 6
      "(": Rule 6
      STRING: Rule 6
      "[": Rule 6
      NUMBER: Rule 6
      CHARACTER: Rule 6
      ")": Rule 6

  State 15:
    76/l3: modifier → "+" • 
      {$, "*", "+", "?", "|", "&", "--", "-", "(", STRING, "[", NUMBER, CHARACTER, ")"}
    reductions:
      $: Rule 7
      "*": Rule 7
      "+": Rule 7
      "?": Rule 7
      "|": Rule 7
      "&": Rule 7
      "--": Rule 7
      "-": Rule 7
      "(": Rule 7
      STRING: Rule 7
      "[": Rule 7
      NUMBER: Rule 7
      CHARACTER: Rule 7
      ")": Rule 7

  State 16:
    77/l3: modifier → "?" • 
      {$, "*", "+", "?", "|", "&", "--", "-", "(", STRING, "[", NUMBER, CHARACTER, ")"}
    reductions:
      $: Rule 8
      "*": Rule 8
      "+": Rule 8
      "?": Rule 8
      "|": Rule 8
      "&": Rule 8
      "--": Rule 8
      "-": Rule 8
      "(": Rule 8
      STRING: Rule 8
      "[": Rule 8
      NUMBER: Rule 8
      CHARACTER: Rule 8
      ")": Rule 8

  State 17:
    78/n1: group → group binop • group
      {}
    79/n1: group →  • group modifier
      {}
    80/n1: group →  • group binop group
      {}
    81/n1: group →  • value
      {}
    82/n2: value →  • "(" expression ")"
      {}
    83/n1: value →  • STRING
      {}
    84/n1: value →  • contain
      {}
    85/r4: value →  • NUMBER
      {}
    86/n1: value →  • identifier
      {}
    87/n1: contain →  • "[" contain.body "]"
      {}
    88/r4: identifier →  • CHARACTER chars
      {}
    transitions:
      group: State 37
      value: State 3
      "(": State 4
      STRING: State 5
      contain: State 6
      NUMBER: State 7
      identifier: State 8
      "[": State 9
      CHARACTER: State 10

  State 18:
    89/l5: binop → "|" • 
      {"*", "+", "?", "|", "&", "--", "-", "(", STRING, "[", NUMBER, CHARACTER}
    reductions:
      "*": Rule 9
      "+": Rule 9
      "?": Rule 9
      "|": Rule 9
      "&": Rule 9
      "--": Rule 9
      "-": Rule 9
      "(": Rule 9
      STRING: Rule 9
      "[": Rule 9
      NUMBER: Rule 9
      CHARACTER: Rule 9

  State 19:
    90/l5: binop → "&" • 
      {"*", "+", "?", "|", "&", "--", "-", "(", STRING, "[", NUMBER, CHARACTER}
    reductions:
      "*": Rule 10
      "+": Rule 10
      "?": Rule 10
      "|": Rule 10
      "&": Rule 10
      "--": Rule 10
      "-": Rule 10
      "(": Rule 10
      STRING: Rule 10
      "[": Rule 10
      NUMBER: Rule 10
      CHARACTER: Rule 10

  State 20:
    91/l5: binop → "--" • 
      {"*", "+", "?", "|", "&", "--", "-", "(", STRING, "[", NUMBER, CHARACTER}
    reductions:
      "*": Rule 11
      "+": Rule 11
      "?": Rule 11
      "|": Rule 11
      "&": Rule 11
      "--": Rule 11
      "-": Rule 11
      "(": Rule 11
      STRING: Rule 11
      "[": Rule 11
      NUMBER: Rule 11
      CHARACTER: Rule 11

  State 21:
    92/l5: binop → "-" • 
      {"*", "+", "?", "|", "&", "--", "-", "(", STRING, "[", NUMBER, CHARACTER}
    reductions:
      "*": Rule 12
      "+": Rule 12
      "?": Rule 12
      "|": Rule 12
      "&": Rule 12
      "--": Rule 12
      "-": Rule 12
      "(": Rule 12
      STRING: Rule 12
      "[": Rule 12
      NUMBER: Rule 12
      CHARACTER: Rule 12

  State 22:
    93/n2: value → "(" expression • ")"
      {}
    transitions:
      ")": State 38

  State 23:
    94/n1: contain → "[" contain.body • "]"
      {}
    transitions:
      "]": State 39

  State 24:
    95/n1: contain.body → "^" • contain.parts
      {}
    96/n1: contain.parts →  • contain.part
      {}
    97/n1: contain.parts →  • contain.part contain.parts
      {}
    98/n1: contain.part →  • contain.char
      {}
    99/l5: contain.part →  • contain.char "-" contain.char
      {}
    100/l5: contain.part →  • "-"
      {}
    101/r4: contain.char →  • CHARACTER
      {}
    102/r4: contain.char →  • NUMBER
      {}
    103/n1: contain.char →  • ESCAPED
      {}
    transitions:
      contain.parts: State 40
      contain.part: State 26
      contain.char: State 27
      "-": State 28
      CHARACTER: State 29
      NUMBER: State 30
      ESCAPED: State 31

  State 25:
    104/n1: contain.body → contain.parts • 
      {"]"}
    reductions:
      "]": Rule 26

  State 26:
    105/n1: contain.parts → contain.part • 
      {"]"}
    106/n1: contain.parts → contain.part • contain.parts
      {}
    107/n1: contain.parts →  • contain.part
      {}
    108/n1: contain.parts →  • contain.part contain.parts
      {}
    109/n1: contain.part →  • contain.char
      {}
    110/l5: contain.part →  • contain.char "-" contain.char
      {}
    111/l5: contain.part →  • "-"
      {}
    112/r4: contain.char →  • CHARACTER
      {}
    113/r4: contain.char →  • NUMBER
      {}
    114/n1: contain.char →  • ESCAPED
      {}
    transitions:
      contain.parts: State 41
      contain.part: State 26
      contain.char: State 27
      "-": State 28
      CHARACTER: State 29
      NUMBER: State 30
      ESCAPED: State 31
    reductions:
      "]": Rule 27

  State 27:
    115/n1: contain.part → contain.char • 
      {"]", CHARACTER, NUMBER, ESCAPED, "-"}
    116/l5: contain.part → contain.char • "-" contain.char
      {}
    transitions:
      "-": State 42
    reductions:
      "]": Rule 29
      CHARACTER: Rule 29
      NUMBER: Rule 29
      ESCAPED: Rule 29

  State 28:
    117/l5: contain.part → "-" • 
      {"]", CHARACTER, NUMBER, ESCAPED, "-"}
    reductions:
      "]": Rule 31
      CHARACTER: Rule 31
      NUMBER: Rule 31
      ESCAPED: Rule 31
      "-": Rule 31

  State 29:
    118/r4: contain.char → CHARACTER • 
      {"]", CHARACTER, NUMBER, ESCAPED, "-"}
    reductions:
      "]": Rule 32
      CHARACTER: Rule 32
      NUMBER: Rule 32
      ESCAPED: Rule 32
      "-": Rule 32

  State 30:
    119/r4: contain.char → NUMBER • 
      {"]", CHARACTER, NUMBER, ESCAPED, "-"}
    reductions:
      "]": Rule 33
      CHARACTER: Rule 33
      NUMBER: Rule 33
      ESCAPED: Rule 33
      "-": Rule 33

  State 31:
    120/n1: contain.char → ESCAPED • 
      {"]", CHARACTER, NUMBER, ESCAPED, "-"}
    reductions:
      "]": Rule 34
      CHARACTER: Rule 34
      NUMBER: Rule 34
      ESCAPED: Rule 34
      "-": Rule 34

  State 32:
    121/r4: identifier → CHARACTER chars • 
      {$, "*", "+", "?", "|", "&", "--", "-", "(", STRING, "[", NUMBER, CHARACTER, ")"}
    reductions:
      $: Rule 19
      "*": Rule 19
      "+": Rule 19
      "?": Rule 19
      "|": Rule 19
      "&": Rule 19
      "--": Rule 19
      "-": Rule 19
      "(": Rule 19
      STRING: Rule 19
      "[": Rule 19
      NUMBER: Rule 19
      CHARACTER: Rule 19
      ")": Rule 19

  State 33:
    122/n1: chars → char • 
      {$, "*", "+", "?", "|", "&", "--", "-", "(", STRING, "[", NUMBER, CHARACTER, ")"}
    123/n1: chars → char • chars
      {}
    124/n1: chars →  • char
      {}
    125/n1: chars →  • char chars
      {}
    126/r4: char →  • CHARACTER
      {}
    127/r4: char →  • NUMBER
      {}
    128/l5: char →  • "-"
      {}
    transitions:
      chars: State 43
      char: State 33
      CHARACTER: State 34
      NUMBER: State 35
      "-": State 36
    reductions:
      $: Rule 20
      "*": Rule 20
      "+": Rule 20
      "?": Rule 20
      "|": Rule 20
      "&": Rule 20
      "--": Rule 20
      "(": Rule 20
      STRING: Rule 20
      "[": Rule 20
      ")": Rule 20

  State 34:
    129/r4: char → CHARACTER • 
      {$, "*", "+", "?", "|", "&", "--", "-", "(", STRING, "[", NUMBER, CHARACTER, ")"}
    reductions:
      $: Rule 22
      "*": Rule 22
      "+": Rule 22
      "?": Rule 22
      "|": Rule 22
      "&": Rule 22
      "--": Rule 22
      "-": Rule 22
      "(": Rule 22
      STRING: Rule 22
      "[": Rule 22
      NUMBER: Rule 22
      CHARACTER: Rule 22
      ")": Rule 22

  State 35:
    130/r4: char → NUMBER • 
      {$, "*", "+", "?", "|", "&", "--", "-", "(", STRING, "[", NUMBER, CHARACTER, ")"}
    reductions:
      $: Rule 23
      "*": Rule 23
      "+": Rule 23
      "?": Rule 23
      "|": Rule 23
      "&": Rule 23
      "--": Rule 23
      "-": Rule 23
      "(": Rule 23
      STRING: Rule 23
      "[": Rule 23
      NUMBER: Rule 23
      CHARACTER: Rule 23
      ")": Rule 23

  State 36:
    131/l5: char → "-" • 
      {$, "*", "+", "?", "|", "&", "--", "-", "(", STRING, "[", NUMBER, CHARACTER, ")"}
    reductions:
      $: Rule 24
      "*": Rule 24
      "+": Rule 24
      "?": Rule 24
      "|": Rule 24
      "&": Rule 24
      "--": Rule 24
      "-": Rule 24
      "(": Rule 24
      STRING: Rule 24
      "[": Rule 24
      NUMBER: Rule 24
      CHARACTER: Rule 24
      ")": Rule 24

  State 37:
    132/n1: group → group binop group • 
      {$, "*", "+", "?", "|", "&", "--", "-", "(", STRING, "[", NUMBER, CHARACTER, ")"}
    133/n1: group → group • modifier
      {}
    134/l3: modifier →  • "*"
      {}
    135/l3: modifier →  • "+"
      {}
    136/l3: modifier →  • "?"
      {}
    137/n1: group → group • binop group
      {}
    138/l5: binop →  • "|"
      {}
    139/l5: binop →  • "&"
      {}
    140/l5: binop →  • "--"
      {}
    141/l5: binop →  • "-"
      {}
    transitions:
      modifier: State 13
      "*": State 14
      "+": State 15
      "?": State 16
      binop: State 17
      "|": State 18
      "&": State 19
      "--": State 20
      "-": State 21
    reductions:
      $: Rule 4
      "(": Rule 4
      STRING: Rule 4
      "[": Rule 4
      NUMBER: Rule 4
      CHARACTER: Rule 4
      ")": Rule 4

  State 38:
    142/n2: value → "(" expression ")" • 
      {$, "*", "+", "?", "|", "&", "--", "-", "(", STRING, "[", NUMBER, CHARACTER, ")"}
    reductions:
      $: Rule 13
      "*": Rule 13
      "+": Rule 13
      "?": Rule 13
      "|": Rule 13
      "&": Rule 13
      "--": Rule 13
      "-": Rule 13
      "(": Rule 13
      STRING: Rule 13
      "[": Rule 13
      NUMBER: Rule 13
      CHARACTER: Rule 13
      ")": Rule 13

  State 39:
    143/n1: contain → "[" contain.body "]" • 
      {$, "*", "+", "?", "|", "&", "--", "-", "(", STRING, "[", NUMBER, CHARACTER, ")"}
    reductions:
      $: Rule 18
      "*": Rule 18
      "+": Rule 18
      "?": Rule 18
      "|": Rule 18
      "&": Rule 18
      "--": Rule 18
      "-": Rule 18
      "(": Rule 18
      STRING: Rule 18
      "[": Rule 18
      NUMBER: Rule 18
      CHARACTER: Rule 18
      ")": Rule 18

  State 40:
    144/n1: contain.body → "^" contain.parts • 
      {"]"}
    reductions:
      "]": Rule 25

  State 41:
    145/n1: contain.parts → contain.part contain.parts • 
      {"]"}
    reductions:
      "]": Rule 28

  State 42:
    146/l5: contain.part → contain.char "-" • contain.char
      {}
    147/r4: contain.char →  • CHARACTER
      {}
    148/r4: contain.char →  • NUMBER
      {}
    149/n1: contain.char →  • ESCAPED
      {}
    transitions:
      contain.char: State 44
      CHARACTER: State 29
      NUMBER: State 30
      ESCAPED: State 31

  State 43:
    150/n1: chars → char chars • 
      {$, "*", "+", "?", "|", "&", "--", "-", "(", STRING, "[", NUMBER, CHARACTER, ")"}
    reductions:
      $: Rule 21
      "*": Rule 21
      "+": Rule 21
      "?": Rule 21
      "|": Rule 21
      "&": Rule 21
      "--": Rule 21
      "-": Rule 21
      "(": Rule 21
      STRING: Rule 21
      "[": Rule 21
      NUMBER: Rule 21
      CHARACTER: Rule 21
      ")": Rule 21

  State 44:
    151/l5: contain.part → contain.char "-" contain.char • 
      {"]", CHARACTER, NUMBER, ESCAPED, "-"}
    reductions:
      "]": Rule 30
      CHARACTER: Rule 30
      NUMBER: Rule 30
      ESCAPED: Rule 30
      "-": Rule 30

